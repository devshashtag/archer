#!/usr/bin/env bash

function trim() {
    stdin="$(cat /dev/stdin)"

    sed -e 's/^[[:space:]]*//' -e 's/[[:space:]]*$//' <<< "$stdin"
}

function trimChars() {
    chars="$1"
    stdin="$(cat /dev/stdin)"

    for char in $(grep -o . <<<"$chars"); do
        stdin="$(sed -e "s| *$char *|$char|g" <<< "$stdin")"
    done

    echo "$stdin"
}

function getItems() {
    name="$1"

    grep -o "$name=([^)]*)" <<<"$config" |sed "s|$name=(\([^)]*\))|\1|"
}

function fixObjectSyntax() {
    name="$1"

    items="$(getItems "$name")"

    fixedKeys="$(sed "s|\(\w*\)=|[\1]=|g" <<<"$items")"

    fixedObject="declare -A $name=($fixedKeys)"

    config="$(sed "s|$name=(\([^)]*\))|$fixedObject|" <<<"$config")"
}

# read config
config="$(sed 's/#.*$//g' ../config | # remove comments
    sed '/^\s*$/d'   |  # remove empty lines
    tr '\n' ' '      |  # remove new lines
    tr ':{}' '=()'   |  # fix objects syntax
    trimChars '=()'  |  # trim spaces around = (  ) chars
    tr -s ' '        |  # replace sequence of repeated spaces
    sed 's|)|) ; |g' |  # add space, ; after objects
    trim)"

# fix core-objects syntax
core_objects="partitions options"

for name in $core_objects; do
   fixObjectSyntax "$name"
done

# set config variables
eval "$config"

# test
# echo ${options[default_shell]}
