#!/usr/bin/env bash

function trim() {
    stdin="$(cat /dev/stdin)"

    sed -e 's/^ *//' -e 's/ *$//' <<< "$stdin"
}

function trimChars() {
    chars="$1"
    stdin="$(cat /dev/stdin)"

    for char in $(grep -o . <<<"$chars"); do
        stdin="$(sed -e "s| *$char *|$char|g" <<< "$stdin")"
    done

    echo "$stdin"
}

function getItems() {
    name="$1"

    grep -o "$name=([^)]*)" <<<"$config" |sed "s|$name=(\([^)]*\))|\1|"
}

function convertToArray() {
    name="$1"
    items="$(getItems "$name")"

    fixedKeys="$(sed "s|\(\w*\)=|[\1]=|g" <<<"$items")"
    fixedObject="declare -A $name=($fixedKeys)"

    config="$(sed "s|$name=(\([^)]*\))|$fixedObject|" <<<"$config"| trimChars '=()')"
}

# read config
config="$(sed 's/#.*$//g' "$1" | # remove comments
    sed '/^ *$/d'     |  # remove empty lines
    tr '\n' ' '       |  # remove new lines
    tr -s ' '         |  # replace sequence of repeated spaces
    tr ':{}' '=()'    |  # convert colon, open, close brackets to bash array compatibable
    trimChars '=()"'  |  # trim spaces around = ( ) chars
    sed 's/\w*=/ &/g' |  # add space at start of each line
    tr -s ' '         |  # replace sequence of repeated spaces
    sed 's|)|);|g'    |  # add ; at end of each array
    trim)"

# convert configs to arrays
objects="partitions options"

for name in $objects; do
   convertToArray "$name"
done

# create config variables
eval "$config"

# test
# echo ${options[default_shell]}
